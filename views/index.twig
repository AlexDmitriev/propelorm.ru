{% extends "main.twig" %}

{% block content %}
<p><img src='/images/propel-logo.png' alt='Propel logo' /></p>

<h3 id='what'>Что?</h3>

<p>Propel это объектно-реляционный маппер (ORM) с открытым исходным кодом для PHP5. Он позволяет взаимодействовать с вашей базой данных используя набор объектов, предоставляющих простое API для сохранения и получения данных.</p>

<h3 id='why'>Почему?</h3>

<p>Propel предоставляет вам, разработчику веб-приложений, инструменты для работы с базой данных так же, как если бы вы работали с другими классами и объектами в PHP.</p>

<ul>
    <li>Propel предоставляет вам хорошо описаный API для работы с базой данных.</li>
    <li>Propel использует стандарты Объектно Ориентированного программирования на PHP5 &#8211; Исключения (Exceptions), автозагрузку (autoloading), Итераторы (Iterators) и friends (другие плюшки?)</li>
</ul>

<p>Propel опять делает работу с базой приятной.</p>

<h3 id='show_me'>Покажи мне!</h3>
<pre><code>&lt;php
  $book = BookQuery::create()->findPK(123); // получаем запись из базы
  $book->setName('Don\'t be Hax0red!'); // изменяем. Не паримся на счет экранирования
  $book->save(); // сохраняем изменения в базе

  $books = BookQuery::create()  // получаем все книги...
    ->filterByPublishYear(2009) // ... опубликованные в 2009
    ->orderByTitle()            // ... отсортированные по заголовку
    ->joinWith('Book.Author')   // ... вместе с авторами
    ->find();

  foreach($books as $book) {
    echo  $book->getAuthor()->getFullName();
  }</code></pre>

<h3 id='get_it'>Получаем!</h3>

<p>Форкаем репозиторий Propel на GitHub по адресу <a href='http://github.com/propelorm/propel'>http://github.com/propelorm/propel</a>.</p>

<h3 id='dive_in'>Погружаемся!</h3>

<p>Propel использует PDO в качестве абстрактного слоя, и генерацию кода, чтобы избавиться от лишней нагрузки во время динамической обработки. Вот почему Propel <em>быстрый</em>.</p>

<p>Propel implements all the key concepts of mature ORM layers: the ActiveRecord pattern, validators, behaviors, table inheritance, reverse engineering an existing database, nested sets, nested transactions, lazy loading, LOB, you name it.</p>

<p>Propel is built for developers who need to keep control of their code:</p>

<ul>
    <li>Extensibility is at the heart of Propel&#8217;s design; whatever you need to customize, Propel allows you to do so in a snap.</li>

    <li>Propel can get out of your way for when you need custom queries or hyper-optimized transactions.</li>

    <li>If you need to change your RDBMS in the course of the project, rebuild your model and you&#8217;re ready to go. Propel supports MySQL, PostgreSQL, SQLite, MSSQL, and Oracle.</li>

    <li>The code generated by Propel is well commented, IDE-friendly and easy to use.</li>

    <li>The Propel project started in 2005, and already powers thousands of websites. Thoroughly documented, backed by many tutorials across the web, it also benefits from an enthusiast community that provides rapid support for both beginner and hardcore developers.</li>
</ul>

<p>Propel is released under the <a href='http://www.propelorm.org/download#license'>MIT license</a>. It&#8217;s free to use, even in commercial applications.</p>

<p>Do you want to know more? Jump to the Documentation tab, or start exploring the code in the GitHub repository.</p>

<h3 id='propel_ecg_build_status'>Propel ECG (Build Status)</h3>

<p>Propel is strongly unit tested. Propel is developed under Continuous Integration and with a Test Driven Development approach. You can look at the <a href='http://ci.propelorm.org/'>Propel CI server</a> powered by <a href='http://jenkins-ci.org/'>Jenkins</a> or look at the results below:</p>
{% endblock %}
